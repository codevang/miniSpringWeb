<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- 커넥션풀 DataSource 객체 -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/hswebdb?characterEncoding=UTF-8" />
		<property name="username" value="codevang" />
		<property name="password" value="codevang1!" />
		<property name="initialSize" value="0" />
		<property name="minIdle" value="0" />
		<property name="maxIdle" value="10" />
		<property name="maxTotal" value="10" />
		<property name="maxWaitMillis" value="1000" />
	</bean>

	<!-- sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/mybatis/mybatisConfig.xml" />
		<property name="mapperLocations" value="classpath:/mybatis/mapper/*.xml" />
	</bean>

	<!-- SqlSessionTemplate -->
	<bean id="sqlSessoinTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<!-- Mapper 인터페이스 스캔 및 Bean 등록 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="hs.spring.hsweb.mapper.*" />
		<property name="annotationClass" value="hs.spring.hsweb.config.annotation.Mapper" />
	</bean>

	<!-- 트랜젝션 관리 객체 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 트랜잭션 AOP 설정 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert*" rollback-for="Exception" />
			<tx:method name="update*" rollback-for="Exception" />
			<tx:method name="delete*" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<!-- Service 클래스에만 적용되도록 함 -->
		<aop:pointcut id="transactionPointcut" 
				expression="within(hs.spring.hsweb.service..*)" />
		
		<aop:advisor id="transactionAdvisor" 
				pointcut-ref="transactionPointcut" advice-ref="txAdvice" />
	</aop:config>
</beans>